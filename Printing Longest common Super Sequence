#include <bits/stdc++.h>
using namespace std;

string LCS(string a,string b,int n,int m)
{
    int dp[n+1][m+1];
    for(int i=0;i<=n;i++)dp[i][0]=0;
    for(int j=0;j<=m;j++)dp[0][j]=0;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            if(a[i-1]==b[j-1])
            {
                dp[i][j]=1+dp[i-1][j-1];
            }
            else
            {
                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            }
        }
    }
    string ans="";
    int i=n,j=m;
    while(i>0 && j>0)
    {
        if(a[i-1]==b[j-1])
        {
            ans.push_back(a[i-1]);
            i--,j--;
        }
        else
        {
            if(dp[i-1][j]>dp[i][j-1])
            {
                ans.push_back(a[i-1]);
                i--;
            }
            else
            {
                ans.push_back(b[j-1]);
                j--;
            }
        }
    }
    return ans;
}
int main()
{
    string a="abbaz";
    string b="abcbz";
    int n=a.size();
    int m=b.size();
    string ans=LCS(a,b,n,m);
    reverse(ans.begin(),ans.end());
    cout<<ans;
}
